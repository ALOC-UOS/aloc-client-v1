name: CI/CD Frontend

on:
  push:
    branches: ["deploy"]

jobs:
  build:
    name: CI - Build & Deploy Frontend
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env
          echo "VITE_USER_PROFILE_IMAGE_URL=${{ secrets.VITE_USER_PROFILE_IMAGE_URL }}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (Frontend)
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/aloc-frontend:latest

      # SSH Key 설정
      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      # SSH 연결 확인
      - name: Test SSH Connection
        run: ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo '✅ SSH 연결 성공!'"

      # EC2에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key_path: key.pem
          script: |
            echo "🔄 Frontend Deployment Start"
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "🛑 Stopping old frontend container..."
            if [ "$(docker ps -q -f name=aloc-frontend)" ]; then
              docker stop aloc-frontend
              docker rm aloc-frontend
            fi

            echo "🧹 Cleaning old images..."
            docker image prune -af
            docker rmi ${{ secrets.DOCKER_USERNAME }}/aloc-frontend:latest || true

            echo "📦 Pulling latest frontend image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/aloc-frontend:latest

            echo "🚀 Starting frontend container..."
            docker run -d --name aloc-frontend -p 5173:80 ${{ secrets.DOCKER_USERNAME }}/aloc-frontend:latest

            echo "✅ Frontend Deployment Done!"

      # ✅ 성공 알림
      - name: Send deployment status to Discord
        if: success()
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            [OPEN-ALOC-FRONTEND]
            ✅ 배포 성공
            
            커밋한 사람 👨‍💻${{ github.actor }}
            ${{ github.event.head_commit.message }}

      # ❌ 실패 알림
      - name: Send deployment failure to Discord
        if: failure()
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            [OPEN-ALOC-FRONTEND]
            ❌ 배포 실패
            확인이 필요해요 👀
            
            커밋한 사람 👨‍💻${{ github.actor }}
            ${{ github.event.head_commit.message }}
            🔗 [배포 로그 확인하기](https://github.com/ALOC-UOS/aloc-frontend/actions/runs/${{ github.run_id }})