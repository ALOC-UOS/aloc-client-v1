import React, { useState } from 'react';
import TopBar from '../../components/TopBar';
import CoinIcon from '../../assets/coin-icon.svg';
import DefaultProfile from '../../assets/default-profile.svg';
import ChangeColor from '../../assets/change-color.svg';
import DecorationCharacter from '../../components/Decorations/Character';
import useModal from '../../hooks/useModal';
import useLoginState from '../../hooks/useLoginState';
import useUserState from '../../hooks/useUserState';
import { serverAPI } from '../../api/axios';
import { PRICE } from '../../constants/Shop';
import {
  ShopContainer,
  ContentContainer,
  ItemContainer,
  ItemCard,
  ItemImgWrapper,
  ItemImg,
  ItemInfo,
  InfoWrapper,
  ItemName,
  InfoDescription,
  ItemPrice,
  Button,
} from './style';

const Shop = () => {
  const [changeColorText, setChangeColorText] = useState('');
  const [errorText, setErrorText] = useState('');
  const { isLoggedIn } = useLoginState();
  const { user, setUserInfo } = useUserState();
  const changeColor = async () => {
    await serverAPI
      .put('/color/change')
      .then(response => {
        setChangeColorText(
          <div
            style={{
              display: 'flex',
              alignItems: 'center',
              textAlign: 'center',
              flexDirection: 'column',
            }}
          >
            <div>
              <strong>Î≥ÄÍ≤ΩÎêú ÏÉâÏÉÅ: </strong>
              {response.data.result.colorName}
            </div>

            <div>
              <strong>ÎÇ®ÏùÄ ÏΩîÏù∏: </strong>
              {response.data.result.coin}
            </div>
          </div>
        );
        buyModal.hide();
        changeColorSuccessModal.show();
        serverAPI
          .get('/user')
          .then(response => setUserInfo(response.data.result))
          .catch(error => console.log(error));
      })
      .catch(error => {
        console.log(error);
      });
  };
  const openBuyModal = () => {
    if (!isLoggedIn) {
      setErrorText('Î°úÍ∑∏Ïù∏ ÌõÑ Ïù¥Ïö©Ìï¥Ï£ºÏÑ∏Ïöî.');
      errorModal.show();
      return;
    }
    if (user.coin <= PRICE.CHANGE_COLOR_ITEM) {
      setErrorText('ÏΩîÏù∏Ïù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§ ü•≤');
      errorModal.show();
      return;
    }
    buyModal.show();
  };
  const buyModal = useModal({
    description: 'Íµ¨Îß§ÌïòÎ©¥ ÏõêÎûò ÏÉÅÌÉúÎ°ú ÎèåÏïÑÍ∞à Ïàò ÏóÜÏñ¥Ïöî!',
    cancelText: 'Ï∑®ÏÜå',
    okText: 'ÌôïÏù∏',
    closable: true,
    onOk: changeColor,
  });
  const changeColorSuccessModal = useModal({
    description: changeColorText,
    okText: 'ÌôïÏù∏',
  });
  const errorModal = useModal({
    description: errorText,
    okText: 'ÌôïÏù∏',
  });
  const adminModal = useModal({
    description: 'Íµ¨Îß§ Î¨∏ÏùòÎäî ÎîîÏä§ÏΩîÎìúÎ°ú Ïó∞ÎùΩÌï¥Ï£ºÏÑ∏Ïöî üòä',
  });
  const DecorationItems = [
    {
      name: 'Ï¥àÎ°ù Í±∞Î∂ÅÏù¥',
      description: 'Í∑ÄÏó¨Ïö¥ Í±∞Î∂ÅÏù¥Í∞Ä ÏóâÍ∏àÏóâÍ∏à Í∏∞Ïñ¥Ïò§Î¶ÖÎãàÎã§.',
      price: PRICE.GREEN_TURTLE,
      type: 'GreenTurtle',
    },
    {
      name: 'Î∂ÑÌôç Í±∞Î∂ÅÏù¥',
      description: 'Í∑ÄÏó¨Ïö¥ Í±∞Î∂ÅÏù¥Í∞Ä ÏóâÍ∏àÏóâÍ∏à Í∏∞Ïñ¥Ïò§Î¶ÖÎãàÎã§.',
      price: PRICE.PINK_TURTLE,
      type: 'PinkTurtle',
    },
    {
      name: 'ÌååÎûë ÌååÎèÑ',
      description: 'Î∞îÎã§Î°ú Îñ†ÎÇòÍ≥† Ïã∂Ïñ¥ÏßÄÎÑ§Ïöî.',
      price: PRICE.WAVE,
      type: 'Wave',
    },
    {
      name: 'ÎπÑÎàóÎ∞©Ïö∏',
      description: 'ÎπÑÎàóÎ∞©Ïö∏Ïù¥ ÎëêÎë•Ïã§ Îñ†Îã§ÎãôÎãàÎã§.',
      price: PRICE.BUBBLE,
      type: 'Bubble',
    },
  ];

  const NormalItems = [
    {
      name: 'Ïª¨Îü¨ Î≥ÄÍ≤ΩÍ∂å',
      description: 'Î¨∏Ï†úÎ•º ÌíÄÏóàÏùÑ Îïå ÏÉâÍπîÏù¥ Î≥ÄÍ≤ΩÎê©ÎãàÎã§.',
      price: PRICE.CHANGE_COLOR_ITEM,
    },
  ];

  return (
    <ShopContainer>
      {buyModal.render()}
      {errorModal.render()}
      {changeColorSuccessModal.render()}
      {adminModal.render()}
      <TopBar />
      <ContentContainer>
        <ItemContainer>
          {DecorationItems.map((item, index) => (
            <ItemCard key={index}>
              <ItemImgWrapper>
                <DecorationCharacter type={item.type} size={'small'} />
                <ItemImg src={DefaultProfile} />
              </ItemImgWrapper>
              <ItemInfo>
                <InfoWrapper>
                  <ItemName>{item.name}</ItemName>
                  <InfoDescription>{item.description}</InfoDescription>
                </InfoWrapper>
                <ItemPrice>
                  <img src={CoinIcon} />
                  {item.price}
                </ItemPrice>
              </ItemInfo>
              <Button onClick={adminModal.show}>Íµ¨Îß§</Button>
            </ItemCard>
          ))}
          {NormalItems.map((item, index) => (
            <ItemCard key={index}>
              <ItemImgWrapper>
                <ItemImg src={ChangeColor} />
              </ItemImgWrapper>
              <ItemInfo>
                <InfoWrapper>
                  <ItemName>{item.name}</ItemName>
                  <InfoDescription>{item.description}</InfoDescription>
                </InfoWrapper>
                <ItemPrice>
                  <img src={CoinIcon} />
                  {item.price}
                </ItemPrice>
              </ItemInfo>
              <Button onClick={openBuyModal}>Íµ¨Îß§</Button>
            </ItemCard>
          ))}
        </ItemContainer>
      </ContentContainer>
    </ShopContainer>
  );
};

export default Shop;
